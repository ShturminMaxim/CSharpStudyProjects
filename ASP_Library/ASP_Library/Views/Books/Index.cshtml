@model List<ASP_Library.Models.Books>

@{
    ViewBag.Title = "Список Книг";
}
<style>
    table,
    table td,
    .quick-search {
        border: solid 1px;
    }

    .quick-search {
        position: relative;
        margin: 10px;
        float: right;
    }
</style>

@*<form method="post">
    <div class="search-type">
        <input type="checkbox" name="searchType" value="author"> author<br>
        <input type="checkbox" name="searchType" value="category" checked> category<br>
        <input type="checkbox" name="searchType" value="theme"> theme <br>
        <input type="checkbox" name="searchType" value="press"> press<br>
        <input type="checkbox" name="searchType" value="name"> name<br>
    </div>
    <input type="text" name="textSearch" value=""/>
    <input type="submit" name="ok" value="search"/>
</form>*@



@*<div class="quick-search">
    <h4>Quick Ajax Searh</h4>
    <div class="quick-search-type">
        <input type="radio" name="searchType" value="author"> author<br>
        <input type="radio" name="searchType" value="category" checked> category<br>
        <input type="radio" name="searchType" value="theme"> theme <br>
        <input type="radio" name="searchType" value="press"> press<br>
        <input type="radio" name="searchType" value="name"> name<br>
    </div>
    <input type="text" name="textSearch" class="textSearch" value=""/>
    <input type="submit" class="search" name="ok" value="search"/>
</div>    
<br />*@


<script>
    jQuery(function () {
        jQuery('.search').on('click', function () {
            var bookName = jQuery('.textSearch').val();
            var type = jQuery('.quick-search-type input:checked').val();

            jQuery.ajax({
                type: "post",
                data: {
                    'textSearch': bookName,
                    'searchType': type
                },
                success: function () {
                    jQuery('body').html(arguments[0].match(/<body[^>]*>((.|[\n\r])*)<\/body>/im)[0]);
                    console.dir(arguments);
                }
            })
        });
    })
</script>

<script>
    function failureFunctionHandler() {
        alert('not found');
    }

</script>
<div id="result">
    <script>
        $(function () {
            $('[data-autocomplete-source]').each(function (i, elem) {
                $(this).autocomplete({
                    source: $(this).attr("data-autocomplete-source")
                });
            });
        })
    </script>
    <h2>Index</h2>
    

    @using (Ajax.BeginForm("BooksSearch", new AjaxOptions { UpdateTargetId = "result", OnFailure = "failureFunctionHandler" }))
    { 
        <input type="text" name="name" data-autocomplete-source="@Url.Action("AutocompleteSearch")" value=""/>
        <input type="submit" name="ok" value="search"/>
    }
    
    @*
        AjaxOptions

      UpdateTargetId - Айди элемента , который будет Перерендерен с результатами Экшна.
      Confirm - Содержит сообщения о подтверждении отправки запроса на сервер,
      HttpMethod - Гет или Пост метод отправки данных.
      InsertionMode - устанавливает как полученные данные будут отображаться на странице. Афтер, Бефоре, Реплейс.
      LoadingElementDuration - колво миллисекунд до показа Прелоадера
      LoadinglementId - Айди элемента прелоадера
      onBegin - перед отправкой запроса , без параметров
      onComplete - после выполнения запроса (не зависимо от результата) , request and error
      onFailure - после неудачного завершения запроса, request and error
      onSuccess - после удачного завершения запроса
      Url - адрес сервера для запроса
    
    *@

    @*
        
        JSON
        js object notation
        
                
    *@

    <table class="books-list">
    @{
        int n = Model.Count;

        if (n % 5 != 0)
        {
            n = (@Model.Count / 5) + 1;
        }
        else
        {
            n = (@Model.Count / 5);
        }
    }

    @for (int i = 0, x = 0; i < n; i++)
    {
       <tr>
           @for (int j = 0; j < 5; j++, x++)
           {

               if (x < Model.Count)
               {
                    <td align="center">
                       <img width="80" src="~/Images/default_cover.jpg" alt="Alternate Text" />
                       <br />
                        @Model[x].Name
                       <br />
                        Tема - @Model[x].Themes.Name
                         <br />
                        Press - @Model[x].Press.Name
                          <br />
                        Category - @Model[x].Categories.Name
                        <br />
                       @Model[x].Authors.LastName 
                       <br /> 
                       @Model[x].Authors.FirstName
                       <br />
                        <a href="/Librarian/GetBook/@Model[x].Id">взять книгу</a>
                   </td>
               }
               else
               {
                    <td></td>
               }
           }
        </tr>
    }
</table>
</div>
